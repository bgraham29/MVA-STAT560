l1 <- 2 * sqrt((p*(n-1)* lambda[1] * qf(.05, p, n-p, lower.tail = FALSE))/(n*(n-p)))
l2 <- 2 * sqrt((p*(n-1)* lambda[2] * qf(.05, p, n-p, lower.tail = FALSE))/(n*(n-p)))
ellipse(cor(male[-31, ]), scale = c(l1, l2), centre = x.bar)
library(ellipse)
ellipse(cor(male[-31, ]), scale = c(l1, l2), centre = x.bar)
lines(ellipse(cor(male[-31, ]), scale = c(l1, l2), centre = x.bar))
lines(ellipse(cor(male[-31, ]), scale = c(sd(male[, 1], sd(male[, 2])), 
    centre = x.bar), col = "blue")
c(sd(male[, 1], sd(male[, 2]))
lines(ellipse(cor(male[-31, ]), scale = c(sd(male[, 1], sd(male[, 2]))), 
    centre = x.bar), col = "blue")
plot(male[-31, ])
points(x.bar[1], x.bar[2], pch = 20, col = "red", cex = 2)
lines(ellipse(cor(male[-31, ]), scale = c(sd(male[, 1], sd(male[, 2]))), 
    centre = x.bar), col = "blue")
lines(ellipse(cor(male[-31, ]), scale = c(S[1,1], S[2,2]), 
    centre = x.bar), col = "blue")
lines(ellipse(cov(male[-31, ]), 
    centre = x.bar), col = "blue")
lines(ellipse(cov(male[-31, ]), scale = c(l1, l2), 
    centre = x.bar), col = "blue")
plot(male[-31, ])
points(x.bar[1], x.bar[2], pch = 20, col = "red", cex = 2)
lines(ellipse(cov(male[-31, ]), centre = x.bar), col = "blue")
lines(ellipse(cov(male[-31, ]), centre = x.bar), col = "blue", level = .5)
lines(ellipse(cov(male[-31, ]), centre = x.bar, level = .5), col = "blue")
abline(h = c(x.bar[1] * c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[1, 1]/n))
)
abline(v = c(x.bar[1] * c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[1, 1]/n))
)
c(x.bar[1] * c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[1, 1]/n))
x.bar[1] 
qt(1-.05/2, n-1)
sqrt(S[1,1]/n)
abline(v = c(x.bar[1] + c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[1, 1]/n))
)
abline(v = c(x.bar[2] + c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[2, 2]/n)))
abline(h = c(x.bar[2] + c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[2, 2]/n)))
abline(0, (.536/.844))
q()
x.bar
male.means
S <- cov(male[-31, ])
x.bar <- apply(male[-31, ], 2, mean)
s.bar
x.bar
solve(S)
n
n-0
n-p
4qf(.05, p, n-p, lower.tail = FALSE))
qf(.05, p, n-p, lower.tail = FALSE))
qf(.05, p, n-p, lower.tail = FALSE)
eigen(S)
2 * (44-1) * 230.03 * 3.22
(2 * (44-1) * 230.03 * 3.22) / (44 * (44-2))
sqrt((2 * (44-1) * 230.03 * 3.22) / (44 * (44-2)))
sqrt((2 * (44-1) * 230.03 * 3.22) / (44 * (44-2))) * 2
Sp <- ((n - 1) * S[1,1] + (n - 1) * S[2, 2])) / (n + n -2)
Sp <- ((n - 1) * S[1,1] + (n - 1) * S[2, 2]) / (n + n -2)
 ((n - 1) * S[1,1] + (n - 1) * S[2, 2])
Sp
n1 <- nrow(male[-31, ])
n2 <- nrow(female)
Smale <- cov(male[-31, ])
Sfemale <- cov(female)
Sp <- ((n1 - 1) * Smale + (n2 - 1) * Sfemale) / (n + n -2)
Sp
female.mean
female.means
x.bar - female.means
as.matrix(x.bar - female.means)
T2 <- (n1 * n2) /(n1 + n2) * t(as.matrix(x.bar - female.means)) %*% Sp %*% 
    as.matrix(x.bar - female.means))
T2 <- (n1 * n2) /(n1 + n2) * t(as.matrix(x.bar - female.means)) %*% Sp %*% 
    as.matrix(x.bar - female.means)
T2
solve(Sp)
T2 <- (n1 * n2) /(n1 + n2) * t(as.matrix(x.bar - female.means)) %*% solve(Sp) %*% 
    as.matrix(x.bar - female.means)
T2
44 + 45 - 2 -1
qf(.05, p, n1 + n2 - p - 1)
qf(.05, p, n1 + n2 - p - 1, lower.tail = FALSE)
Sigma <- diag(5, 1, 1, 1, 1)
Mu <- rep(0, 5)
x <- rMVN(100, Mu, Sigma)
Mu
Sigma
Sigma <- diag(1, 5)
p <- 5
Sigma <- diag(1, p)
Sigma[1,1] <- 5
Mu <- rep(0, p)
n <- 100
x <- rMVN(n, Mu, Sigma)
hist(x)
dim(x)
his(x[,1])
hist(x[,1])
x.bar <- as.matrix(apply(x, 2, mean))
x.bar
S <- cov(x)
S
U <- n * t(x.bar) %*% solve(S) %*% x.bar
length(U)
U
V <- n* t(x.bar) %*% diag(solve(S)) %*% x.bar
V <- n* t(x.bar) %*% diag(diag(solve(S))) %*% x.bar
solve(S)
diag(diag(solve(S)))
U
V
U <- NULL
V <- NULL
for(i in 1:300) {
    x <- rMVN(n, Mu, Sigma)
    x.bar <- as.matrix(apply(x, 2, mean))
    S <- cov(x)
    U[i] <- n * t(x.bar) %*% solve(S) %*% x.bar
    V[i] <- n* t(x.bar) %*% diag(diag(solve(S))) %*% x.bar
}
plot(U, V)
S
Sigma
solve(Sigma)
diag(diag(solve(S))
)
cbind(U, V)
mvn <- cbind(U, V)
qqChiSq(mvn)
mvn <- data.frame(U = U, V = V)
qqChiSq(mvn)
qqChiSq(U)
solve(S) %*% solve(S)
solve(S)
solve(S) %*% diag(solve(solve(S))
)
qqnorm(U)
abline(0,1)
qqnorm(V)
abline(0,1)
qqChiSq(as.data.frame(U))
qqChiSq(as.data.frame(V))
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- ncol(x1)
  Probs <- qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(1)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(as.data.frame(V))
qqChiSq(as.data.frame(U))
cov(S)
qqChiSq(as.data.frame(V))
temp <- t(x.bar) %*% diag(diag(solve(S))
)
hist(temp)
temp
qqnorm(temp)
abline(0,1)
qqChiSq(as.data.frame(temp))
qqChiSq(as.data.frame(U))
qqChiSq(as.data.frame(V))
qqChiSq(as.data.frame(U), 18)
for(i in 1:100) { 
    x <- sort(rchisq(length(U), df = 1))
    points(x, y, col = "blue")
}
qqChiSq(as.data.frame(U), 18)
for(i in 1:100) { 
    x <- sort(rchisq(length(U), df = 1))
    points(x, U, col = "blue")
}
qqChiSq(as.data.frame(V))
for(i in 1:100) { 
    x <- sort(rchisq(length(V), df = 1))
    points(x, U, col = "blue")
}
qqChiSq(as.data.frame(V), 18)
y <- sort(V)
for(i in 1:100) { 
    x <- sort(rchisq(length(V), df = 1))
    points(x, y, col = "blue")
}
qqChiSq(as.data.frame(U), 18)
y <- sort(U)
for(i in 1:100) { 
    x <- sort(rchisq(length(U), df = 1))
    points(x, y, col = "blue")
}
qqC
temp <- rnorm(50)
hist(temp)
hist(100 * temp)
windows)
windows()
temp, rnorm(50, mu = 0, var = n^2)
temp <-  rnorm(50, mu = 0, var = n^2)
rnorm(50, mean = 0, sd = n)
temp <- rnorm(50, mean = 0, sd = n)
hist(temp)
temp <- rnorm(500, mean = 0, sd = n)
hist(temp)
temp <- rnorm(500)
hist(100 * temp)
qqChiSq(as.data.frame(V), 18)
qqChiSq(as.data.frame(V))
Sigma
  if(p = NULL) p <- ncol(x1)
  if(p == NULL) p <- ncol(x1)
  if(p == NULL, p <- ncol(x1))
  if(p == NULL) { p <- ncol(x1) }
p <- NULL
  if(p == NULL) { p <- ncol(x1) }
  if(p == NULL) { 
     p <- ncol(x1) 
  }
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(1)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(as.data.frame(U))
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(as.data.frame(V))
dim(Sigma)
solve(Sigma)
A <- solve(Sigma)%^%(-1/2)
A
A %*% A
A <- Sigma %^% (-1/2)
A
A %*% A
temp <- t(x.bar) %*% A
hist(temp)
length(temp)
qqChiSq(as.data.frame(V/100))
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- qchisq((1:N - .5)/(N*100),p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(as.data.frame(V))
qqChiSq(as.data.frame(U))
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- 100 *qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(as.data.frame(U))
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- 1/100 *qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(as.data.frame(U))
length(U)
n
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- 1/n * qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(as.data.frame(V))
qqChiSq(as.data.frame(V/100))
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
source("QQChiSq.R")
qqChiSq(as.data.frame(V/100))
qqChiSq(as.data.frame(U/100))
source("QQChiSq.R")
qqChiSq(as.data.frame(U/100))
qqChiSq(as.data.frame(V/100))
y <- sort(V/100)
for(i in 1:100) { 
    x <- sort(rchisq(length(V), df = 1))
    points(x, y, col = "blue")
}
y <- sort(V/100)
for(i in 1:100) { 
    x <- sort(rchisq(length(V), df = 5))
    points(x, y, col = "red")
}
    x <- sort(rchisq(length(V), df = 5))
xy <- sort(V/100)
for(i in 1:100) { 
    x <- 1/100 *sort(rchisq(length(V), df = 5))
    points(x, y, col = "red")
}
for(i in 1:100) { 
    x <- 1/100 *sort(rchisq(length(V), df = 5))
    points(x, y, col = "purple")
}
y <- sort(V)
for(i in 1:100) { 
    x <- 1/100 *sort(rchisq(length(V), df = 5))
    points(x, y, col = "purple")
}
y <- sort(V)
for(i in 1:100) { 
    x <- 100 *sort(rchisq(length(V), df = 5))
    points(x, y, col = "orange")
}
n <- 100
p <- 5
Sigma <- diag(1, p)
Sigma[1,1] <- 5
Mu <- rep(0, p)t
U <- NULL
V <- NULL
for(i in 1:300) {
    x <- rMVN(n, Mu, Sigma)
    x.bar <- as.matrix(apply(x, 2, mean))
    S <- cov(x)
    U[i] <- n * t(x.bar) %*% solve(S) %*% x.bar
    V[i] <- n* t(x.bar) %*% diag(diag(solve(S))) %*% x.bar
}
qqChiSq(as.data.frame(U), 18)
pchisq(198.9498, 145, lower.tail = FALSE)
pchisq(198.9498, 145)
2 * pchisq(198.9498, 145, lower.tail = FALSE)
temp <- 100 *qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- 100 * qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- 100 * qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(as.data.frame(V))
qqChiSq(as.data.frame(V))qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- 5 
  Probs <- qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(as.data.frame(V/100))
hist(V)
lines(density(V))
hist(V, freq = FALSE)
lines(density(V))
temp <- qchisq((1:100 -.5)/100, 5)
windows()
plot(density(temp))
lines(density(temp), col = "blue")
windows()
hist(U, freq = FALSE)
lines(density(U))
lines(density(temp), col = "blue")
length(U)
length(temp)
temp <- qchisq((1:300 -.5)/300, 5)
length(temp)
plot(temp, U,  main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
temp <- qchisq((1:300 - .5)/300, 5)
plot(sort(temp), sort(U), main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), xlab = "Theoretical", ylab = "Observed")
abline(0,1, col = "blue")
plot(sort(temp), sort(V), main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution")), xlab = "Theoretical", ylab = "Observed")
abline(0,1, col = "blue")
plot(sort(temp), sort(U), main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution - variable U")), xlab = "Theoretical", ylab = "Observed")
abline(0,1, col = "blue")
plot(sort(temp), sort(V), main = expression(paste("Q-Q Plot for ", chi[(5)]^2,
     " distribution - variable V")), xlab = "Theoretical", ylab = "Observed")
abline(0,1, col = "blue")
q()
