as.matrix(x1 - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1 - mu))
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  u <- NULL
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- ncol(x1)
  Probs <- qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(2)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
qqChiSq(z)
y <- sort(female.chi[-c(31, 42)])
for(i in 1:100) { 
    x <- rchisq(length(y), df = 2)
    points(x, y, col = "blue")
}
max(u)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
max(u)
qqChiSq(female, pch = 18)
y <- sort(female.chi))
for(i in 1:100) { 
    x <- rchisq(length(y), df = 2)
    points(x, y, col = "blue")
}
qqChiSq <- function(x1, pch = 1){
  u <- NULL
  mu <- apply(x1,2,mean)
  Sigma <- cov(x1)
  N <- nrow(x1)
  for(i in 1:N){
    u[i] <- as.matrix(x1[i,] - mu)%*%solve(as.matrix(Sigma))%*%t(as.matrix(x1[i,] - mu))
  }
  Ranks <- sort(u)
  p <- ncol(x1)
  Probs <- qchisq((1:N - .5)/N,p)
  pict <- plot(Probs, Ranks, main = expression(paste("Q-Q Plot for ", chi[(2)]^2,
     " distribution")), pch = pch, xlab = "Theoretical", ylab = "Observed")
  abline(0,1) # order of plot in book
  pict
}
plot(male0
plot(male)
plot(male[-31, ])
plot(female)
plot(male[-31, ])
pars(male)
pairs(male)
pair(male[-31, ])
pairs(male[-31, ])
pairs(male[-31, ], diag.panel = panel.density)
require(SciViews)
install.packages("SciViews")
require(SciViews)
pairs(male, diag.panel = panel.density)
pairs(male[-31, ], diag.panel = panel.density)
pairs(female, diag.panel = panel.density)
which(female.chi == max(female.chi))
out <- which(female.chi == max(female.chi))
qqChiSq(female[-out, ], pch = 18)
y <- sort(female.chi[-c(31, 42)])
for(i in 1:100) { 
    x <- rchisq(length(y), df = 2)
    points(x, y, col = "blue")
}
    x <- 12* runif(n) - 6
    E.S0 <- eigen(S0)
S0
S0 <- matrix(3,1,1,3, nrow = 2)
S0 <- matrix(c(3,1,1,3), nrow = 2)
s0
S0
x
n <- 10
    x <- 12* runif(n) - 6
    E.S0 <- eigen(S0)
    phi <- E.S0$vectors
    Lambda <- E.S0$values
    Q <- sqrt(Lambda) %*% Phi
    Q <- sqrt(Lambda) %*% phi
Q
phi
mu0 <- c(1,1)
    y <- Q %*% x + mu0
    y <- Q %*% t(x) + mu0
    y <- (Q %*% t(x))
    y <- (Q %*% x)
Q
x
    y <- (Q * x)
phi
Lambda
phi %*% sqrt(Lambda)
    Q <- phi %*% sqrt(Lambda)
    y <- (Q * x)
dim(Q)
dim(x)
length(x)
phi
out <- which(female.chi == max(female.chi))
qqChiSq(female[-out, ], pch = 18)
y <- sort(female.chi[-out])
for(i in 1:100) { 
    x <- rchisq(length(y), df = 2)
    points(x, y, col = "blue")
}
out <- which(female.chi == max(female.chi))
qqChiSq(female[-out, ], pch = 18)
y <- sort(female.chi[-out])
for(i in 1:100) { 
    x <- sort(rchisq(length(y), df = 2))
    points(x, y, col = "blue")
}
qqChiSq(female)
qqChiSq(female, pch = 18)
y <- sort(female.chi))
for(i in 1:100) { 
    x <- sort(rchisq(length(y), df = 2))
    points(x, y, col = "blue")
}
qqChiSq(female, pch = 18)
y <- sort(female.chi)
for(i in 1:100) { 
    x <- sort(rchisq(length(y), df = 2))
    points(x, y, col = "blue")
}
    y <- (Q * x)
dim(Q)
length(x)
x
    x <- 12 * runif(n) - 6
x
hist(x)qqChiSq(female, pch = 18)
y <- sort(female.chi)
for(i in 1:100) { 
    x <- sort(rchisq(length(y), df = 2))
    points(x, y, col = "blue")
}
qqChiSq(male)
qqChiSq(male[-31, ])
qqChiSq(female)
    x <- 12 * runif(n) - 6
hist(x)
n
n<- 50
    x <- 12 * runif(n) - 6
hist(x)
    x <- rnorm(n)
hist(x)
    phi <- E.S0$vectors
    Q <- phi %*% sqrt(Lambda)
    y <- (Q * x)
Q
    y <- cbind((Q[1, ] * x), (Q[2, ] * x))
y
scatterplot(y)
plot(y)
Q
    Lambda <- diag(E.S0$values)
Lamba
Lambda
    x <- 12 * runif(n) - 6
    Lambda <- diag(E.S0$values)
    phi <- E.S0$vectors
    Q <- phi %*% sqrt(Lambda)
Q
    Q <- Lambda %^% (-12) %*% phi 
Q
    Q <- Lambda %^% (-1/2) %*% phi 
Q
m0
m0 <- c(1,3)
S0
p <- length(m0)
    for(i in 1:p) {
        x[ , i] <- 12 * runif(n) - 6
    }
    Lambda <- diag(E.S0$values)
    phi <- E.S0$vectors
    Q <- Lambda %^% (-1/2) %*% phi 
    y <- (Q %*% x)
    y <- apply(y, 1, function(x) x + m0)
    p <- length(m0)
    x <- matrix(rep(NA,p), nrow = 1)
    for(i in 1:p) {
        x[ , i] <- 12 * runif(n) - 6
    }
x
    x <- matrix(rep(NA,p), nrow = n)
x
    x <- matrix(rep(NA,n*p), nrow = n)
dim(x)
    for(i in 1:p) {
        x[ , i] <- 12 * runif(n) - 6
    }
    Lambda <- diag(E.S0$values)
    phi <- E.S0$vectors
    Q <- Lambda %^% (-1/2) %*% phi 
    y <- (Q %*% x)
dim(Q)
dim(x)
    y <- (Q %*% t(x))
    y <- apply(y, 1, function(x) x + m0)
plot(y)
rmvnorm <- function(n, m0, S0) {
    p <- length(m0)
    x <- matrix(rep(NA,n*p), nrow = n)
    for(i in 1:p) {
        x[ , i] <- 12 * runif(n) - 6
    }
    Lambda <- diag(E.S0$values)
    phi <- E.S0$vectors
    Q <- Lambda %^% (-1/2) %*% phi 
    y <- (Q %*% t(x))
    y <- apply(y, 1, function(x) x + m0)
    return(y)
}
rmvnorm(c(1,1), matrix(c(1, .3, .3, 1), nrow = 2)
)
rmvnorm(100, c(1,1), matrix(c(1, .3, .3, 1), nrow = 2))
Z <- rmvnorm(100, c(1,1), matrix(c(1, .3, .3, 1), nrow = 2))
apply(Z, 1, mean)
apply(Z, 2, mean)
cov(Z)
S0
S0%^%(1/2) %*% S0 *^*(-1/2)
S0%^%(1/2) %*% S0 %^%(-1/2)
S0%^%(-1/2) %*% S0 %^%(-1/2)
solve(S0)
S0 %^% (-2) %*% S0 %^% (-1/2)
(S0%^%(-1/2)) %*% (S0 %^%(-1/2))
(S0%^%(-2)) %*% (S0 %^%(-1/2))
(S0%^%(1/2)) %*% (S0 %^%(-1/2)) 
(S0%^%(3/2)) %*% (S0 %^%(-1/2)) 
round((S0%^%(1/2)) %*% (S0 %^%(-1/2)), 2)
    (S0 %^% (1/2)) %*% x
dim(x)
    p <- length(m0)
    x <- matrix(rep(NA,n*p), nrow = n)
    for(i in 1:p) {
        x[ , i] <- rnorm(n)
    }
dim(x)
x %*% (S0 %^% (1/2))
rMVN <- function(n = 100, m0, S0) {
    p <- length(m0)
    x <- matrix(rep(NA,n*p), nrow = n)
    for(i in 1:p) {
        x[ , i] <- rnorm(n)
    }
    y <- (x %*% (S0 %^% (1/2))) 
    y <- apply(y, 1, function(x) x + m0)
    return(y)
}
S <- matrix(c(1, .7, .7, 1), nrow = 2)
S
Z <- rMVN(20, c(1,1), S)
plot(Z)
Z
rMVN <- function(n = 100, m0, S0) {
    p <- length(m0)
    x <- matrix(rep(NA,n*p), nrow = n)
    for(i in 1:p) {
        x[ , i] <- rnorm(n)
    }
    y <- (x %*% (S0 %^% (1/2))) 
    y <- apply(y, 1, function(x) x + m0)
    return(t(y))
}
plot(Z)
Z <- rMVN(20, c(1,1), S)
plot(Z)
Z <- rMVN(100, c(1,1), S)
plot(Z)
apply(Z, 2, function(x) round(mean(x)))
apply(Z, 2, function(x) round(sd(x)))
cov(Z)
Z <- rMVN(500, c(1,1), S)
cov(Z)
rMVN <- function(n = 100, m0, S0) {
    p <- length(m0)
    x <- matrix(rep(NA,n*p), nrow = n)
    for(i in 1:p) {
        x[ , i] <- rnorm(n)
    }
    y <- (x %*% (S0 %^% (1/2))) 
    y <- apply(t(y), 1, function(x) x + m0)
    return(y)
}
Z <- rMVN(500, c(1,1), S)
cov(Z)
apply(Z, 1, mean)
apply(Z, 2, mean)
plot(Z)
S <- matrix(c(1, .9, .9, 1), nrow = 2)
Z <- rMVN(500, c(1,1), S)
plot(Z)
S[2,1] <- S[1,2] <- -.7
Z <- rMVN(500, c(1,1), S)
plot(Z)
dim(Z)
head(Z)
Z <- rMVN(500, c(3, 10), diag(1, nrow = 2))
plot(Z)
rMVN <- function(n = 100, m0, S0) {
    p <- length(m0)
    x <- matrix(rep(NA,n*p), nrow = n)
    for(i in 1:p) {
        x[ , i] <- rnorm(n)
    }
    y <- (x %*% (S0 %^% (1/2))) 
    y <- apply(t(y), 1, function(x) x + m0)
    y
}
Z <- rMVN(500, c(3, 10), diag(1, nrow = 2))
plot(Z)
Z <- rMVN(500, c(3, 10), diag(1, nrow = 2))
plot(Z)
Z <- rMVN(500, c(3, 10), diag(1, nrow = 2))
plot(Z)
apply(Z, 2, mean)
head(Z)
hist(Z[, 1])
hist(Z[, 2])
m0 <- c(3,10)
S
S0 <- diag(1, 2)
s0
S0
    p <- length(m0)
    x <- matrix(rep(NA,n*p), nrow = n)
    for(i in 1:p) {
        x[ , i] <- rnorm(n)
    }
n
dim(x)
hist(x[,1])
hist(x[, 2])
    y <- (x %*% (S0 %^% (1/2))) 
hist(y[, 1])
hist(y[,2])
dim(y)
    y <- apply(y, 1, function(x) x + m0)
dim(y)
x[1,]
y[,1]
-1.16+3
.125+10
rMVN <- function(n = 100, m0, S0) {
    p <- length(m0)
    x <- matrix(rep(NA,n*p), nrow = n)
    for(i in 1:p) {
        x[ , i] <- rnorm(n)
    }
    y <- (x %*% (S0 %^% (1/2))) 
    y <- apply(y, 1, function(x) x + m0)
    t(y)
}
rMVN(500, m0, S0)
Z <- rMVN(500, m0, S0)
plot(Z)
apply(Z, 2, mean)
cov(Z)
Z <- rMVN(500, m0, matrix(c(2, .95, .95, 12), nrow = 2))
plot(Z)
apply(Z, 2, mean)
cov(Z)
male.means
a <- matrix(c(1,0), nrow = 2)
t(a) %*% male.means
t(a) %*% male.means + c(-1pf(.05, p, n-p, tail = FALSE)
pf(.05, p, n-p, tail = FALSE)
PF
pf
n <- nrow(male)
p <- ncol(male)
S <- cov(male)
a <- matrix(c(1,0), nrow = 2)
t(a) %*% male.means# 189.3
sqrt((n-1)/n * p/(n-p) * pf(.05, p, n-p, lower.tail = FALSE) * 
    (t(a) %*% S %*% a))
a <- matrix(c(0,1), nrow = 2)
t(a) %*% male.means# 189.3
sqrt((n-1)/n * p/(n-p) * pf(.05, p, n-p, lower.tail = FALSE) * 
    (t(a) %*% S %*% a))
sampleMu <- c(6,4)
sampleS <- matrix(c(1.5, 1.1, 1.1, 2.7), nrow = 2)
sampleMu
sampleS
pf(.05, 2, 23, lower.tail = FALSE)
pf(.95, 2, 23, lower.tail = FALSE)
pf(.95, 2, 23)
pf(.05, 2, 23)
1f(.05, 2, 23)
qf(.05, 2, 23)
qf(.05, 2, 23, lower.tail = FALSE)
a <- matrix(c(1,0), nrow = 2)
t(a) %*% male.means# 189.3
sqrt((n-1)/n * p/(n-p) * qf(.05, p, n-p, lower.tail = FALSE) * 
    (t(a) %*% S %*% a))
a <- matrix(c(0,1), nrow = 2)
t(a) %*% male.means# 189.3
sqrt((n-1)/n * p/(n-p) * qf(.05, p, n-p, lower.tail = FALSE) * 
    (t(a) %*% S %*% a))
pt(.05, n-1)
qt(.05, n-1)
qf(.05, 2, n-2)
qf(.95, 2, n-2)
qt(1 - .05/2, n-1)
n <- nrow(male[-31, ])
p <- ncol(male[-31, ])
S <- cov(male[-31, ])
qt(1-.05/2, n - 1)
qt(1-.05/2, n - 1) * sqrt(S[1,1]/n)
S[1,1]
S[1,1]/n
qt(1-.05/2, n - 1) 
qt(1-.05/2, n - 1) * sqrt(S[1,1]/n)
n <- nrow(male[-31, ])
p <- ncol(male[-31, ])
S <- cov(male[-31, ])
qt(1-.05/2, n - 1) * sqrt(S[1,1]/n)
n
qt(1 - .05/2, n-1) * sqrt(S[1,1]/n)
x.bar <- apply(male[-31, ], 2, mean)
a <- matrix(c(0,1), nrow = 2)
t(a) %*% male.means# 189.3
a <- matrix(c(1,0), nrow = 2)
t(a) %*% male.means# 189.3
t(a) %*% x.bar# 189.3
a <- matrix(c(0,1), nrow = 2)
a <- matrix(c(1,0), nrow = 2)
a <- matrix(c(0,1), nrow = 2)
t(a) %*% x.bar# 189.3
a <- matrix(c(1,0), nrow = 2)
t(a) %*% x.bar# 189.3
x.bar
a <- matrix(c(1,0), nrow = 2)
t(a) %*% x.bar# 189.3
sqrt((n-1)/n * p/(n-p) * qf(.05, p, n-p, lower.tail = FALSE) * 
    (t(a) %*% S %*% a))
a <- matrix(c(0,1), nrow = 2)
t(a) %*% x.bar# 189.3
sqrt((n-1)/n * p/(n-p) * qf(.05, p, n-p, lower.tail = FALSE) * 
    (t(a) %*% S %*% a))
dim(S)
n
p
qt(1-.05/2, n - 1) * sqrt(S[1,1]/n)
qt(1 - .05/2, n-1) * sqrt(S[1,1]/n)
qt(1 - .05/2, n - 1) * sqrt(S[1, 1]/n)
qt(1 - .05/2, n - 1) * sqrt(S[2, 2]/n)
x.bar
eigen(S)
lambda <- eigen(S)$values
2 * sqrt((p*(n-1)* lambda[1] * qf(.05, p, n-p, lower.tail = FALSE))/(n*(n-p)))
2 * sqrt((p*(n-1)* lambda[2] * qf(.05, p, n-p, lower.tail = FALSE))/(n*(n-p)))
plot(male)
plot(male[-31,])
points(x.bar[1], x.bar[2], pch = 20, col = "red")
points(x.bar[1], x.bar[2], pch = 20, col = "red" cex = 2)
points(x.bar[1], x.bar[2], pch = 20, col = "red", cex = 2)
l1 <- 2 * sqrt((p*(n-1)* lambda[1] * qf(.05, p, n-p, lower.tail = FALSE))/(n*(n-p)))
l2 <- 2 * sqrt((p*(n-1)* lambda[2] * qf(.05, p, n-p, lower.tail = FALSE))/(n*(n-p)))
ellipse(cor(male[-31, ]), scale = c(l1, l2), centre = x.bar)
library(ellipse)
ellipse(cor(male[-31, ]), scale = c(l1, l2), centre = x.bar)
lines(ellipse(cor(male[-31, ]), scale = c(l1, l2), centre = x.bar))
lines(ellipse(cor(male[-31, ]), scale = c(sd(male[, 1], sd(male[, 2])), 
    centre = x.bar), col = "blue")
c(sd(male[, 1], sd(male[, 2]))
lines(ellipse(cor(male[-31, ]), scale = c(sd(male[, 1], sd(male[, 2]))), 
    centre = x.bar), col = "blue")
plot(male[-31, ])
points(x.bar[1], x.bar[2], pch = 20, col = "red", cex = 2)
lines(ellipse(cor(male[-31, ]), scale = c(sd(male[, 1], sd(male[, 2]))), 
    centre = x.bar), col = "blue")
lines(ellipse(cor(male[-31, ]), scale = c(S[1,1], S[2,2]), 
    centre = x.bar), col = "blue")
lines(ellipse(cov(male[-31, ]), 
    centre = x.bar), col = "blue")
lines(ellipse(cov(male[-31, ]), scale = c(l1, l2), 
    centre = x.bar), col = "blue")
plot(male[-31, ])
points(x.bar[1], x.bar[2], pch = 20, col = "red", cex = 2)
lines(ellipse(cov(male[-31, ]), centre = x.bar), col = "blue")
lines(ellipse(cov(male[-31, ]), centre = x.bar), col = "blue", level = .5)
lines(ellipse(cov(male[-31, ]), centre = x.bar, level = .5), col = "blue")
abline(h = c(x.bar[1] * c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[1, 1]/n))
)
abline(v = c(x.bar[1] * c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[1, 1]/n))
)
c(x.bar[1] * c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[1, 1]/n))
x.bar[1] 
qt(1-.05/2, n-1)
sqrt(S[1,1]/n)
abline(v = c(x.bar[1] + c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[1, 1]/n))
)
abline(v = c(x.bar[2] + c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[2, 2]/n)))
abline(h = c(x.bar[2] + c(-1, 1) * qt(1 - .05/2, n - 1) * sqrt(S[2, 2]/n)))
abline(0, (.536/.844))
q()
