pnorm(abs(zstar))
pnorm(zstar)
Wnull <- 1/2 * log((1 + (-.75))/(1 - (-.75)))
Wnull
(W-Wnull)/sqrt(1/(dim(cars)[1]-3))
dim(cars)
dim(sales)
round(cor(sales),2))
round(cor(sales),2)
round(cor(sales),3)
W/sqrt(1/(dim(sales)[1]-3))
W <- 1/2*log((1+rx1x4)/(1-rx1x4))
W/sqrt(1/(dim(sales)[1]-3))
rx1x4 <- 0.633
W <- 1/2*log((1+rx1x4)/(1-rx1x4))
W/sqrt(1/(dim(sales)[1]-3))
pnorm(W/sqrt(1/(dim(sales)[1]-3)))
1-2*pnorm(W/sqrt(1/(dim(sales)[1]-3)))
1-pnorm(W/sqrt(1/(dim(sales)[1]-3)))
2*(1-pnorm(W/sqrt(1/(dim(sales)[1]-3))))
z <- W/sqrt(1/(dim(sales)[1]-3))
2*pnorm(-abs(z)))
2*pnorm(-abs(z))
z
Wstar <- W - (3*W + tanh(W))/(4*(dim(sales)[1] - 1))
Wstar
z <- Wstar/sqrt(1/(dim(sales)[1]-1))
z
2*pnorm(-abs(z))
Wstar
Wstar * sqrt(10-1)
rx1x4*sqrt((dim(sales)[1]-2)/(1 - rx1x4^2))
2*pt(-abs(t))
2*pt(-abs(t), df = dim(sales)[1]-2))
2*pt(-abs(t), df = dim(sales)[1]-2)
t
qt(1-.05/2, 10-2)
W
atanh(rx1x4)
mean(sales)
names(sales)
head(sales)
apply(sales,2,mean)
n^(-1) * t(sales) * rep(1,n)
n <- dim(sales)[1]
n^(-1) * t(sales) * rep(1,n)
n^(-1) * t(sales) %*% rep(1,n)
cov(sales)
n^(-1) *( t(sales)%*%sales - n^(-1)*t(X)%*%rep(1,n)%*%t(rep(1,n))%*%sales)
t(sales)%*%sales
 t(sales) %*% rep(1,n)
n^(-1) *( t(matrix(sales))%*%matrix(sales) - n^(-1)*t(X)%*%rep(1,n)%*%t(rep(1,n))%*%sales)
n^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(X)%*%rep(1,n)%*%t(rep(1,n))%*%sales)
n^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(sales)%*%rep(1,n)%*%t(rep(1,n))%*%sales)
n^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
cov(sales)
(n-1)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
 t(as.matrix(sales))%*%as.matrix(sales)
n^(-1) * t(sales) %*% rep(1,n)
rep(1,n)%*%t(rep(1,n))
t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))
t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales)
 n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales)
(n-1)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n)))
 n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))
 t(as.matrix(sales))%*%as.matrix(sales)
n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales)
t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales)
(n)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
cov(sales)
(n-1)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
(n/(n-1)) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
(n-1)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
apply(sales,2,mean)
round(cov(sales))*(n-1)/n
(n-)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
(n)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
(n-1)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
cov(sales)
(n-1)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))*(n-1)/n
round(cor(sales),3)
xbar <- apply(sales,2,mean)
str(xbar)
xbar <- as.matrix(apply(sales,2,mean))
xbar
A <- c(0,0,1,10)
A %*% Xbar
A %*% xbar
Sx <- (n-1)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales))
A%*% Sx %*% t(A)
dim(A)
t(A)
A
A <- matrix(c(0,0,1,10))
A %*% xbar
A%*% Sx %*% t(A)
dim(Sx)
A <- matrix(c(0,0,1,10), nrow=4)
A %*% xbar
A <- matrix(c(0,0,1,10), nrow=1)
A %*% xbar
A%*% Sx %*% t(A)
Sx
Sx <- round((n-1)^(-1) *( t(as.matrix(sales))%*%as.matrix(sales) - n^(-1)*t(as.matrix(sales))%*%rep(1,n)%*%t(rep(1,n))%*%as.matrix(sales)),1)
A%*% Sx %*% t(A)
q()
1589.7 + 10*301.6
2915.6+10*233.7
233.7+10*197.1
A
Sx
A %*% Sx
A %*% Sx %*% t(A)
2915.6 + 233.7+233.7+197.1*10
2915.6 + 233.7+233.7+197.1*100
2915.6 + 233.7+233.7*10+197.1*100
233.7+233.7
2915.6 + (233.7+233.7)*10+197.1*100
sales
summary(lm(sold ~ price, data=sales))
var(sales$sold)
library(ggplot2)
ggplot(sales, aes(x=price, y = sold)) + geom_point() + geom_smooth(method= "lm")
names(BankNotes)
summary(lm(upp ~ low, data= subset(BankNotes, notes == "Genuine"))
)
ggplot(subset(BankNotes, notes=="Genuine"), aes(x=low, y = upp)) + geom_point() +
  geom_smooth(method="lm", se=FALSE, color="red")
summary(lm(low ~ upp, data = subset(BankNotes, notes == "Genuine"))
)
GAMMA
LAMBDA
ls()
eigen(A)
eigen(S)
1/sqrt(2)
sales
rank(sales$advert)
sales.mktg <- data.frame(shop = 1:10, 
              news = c(9,11,10,12,7,11,12,10,11,13), 
              asst = c(10,15,11,15,15,13,7,15,13,10),
              lux = c(18,14,17,9,14,17,16,14,17,15))
sales.mktg
library(reshape2)
mktg.long <- melt(sales.mktg, id.vars = "shop", variable.name = "Strategy")
head(mktg.long)
anova(lm(value ~ Strategy, data = mktg.long))
157.7+102.6
51.3/5.841
summary(lm(sold ~ price, data= sales))
names(sales)
summary(lm(sold ~ price +advert + hrs, data=sales))
summary(lm(sold ~ advert))
summary(lm(sold ~ advert, data=sales))
y
sales.sum <- summary(lm(sold ~ price +advert + hrs, data=sales))
p <- length(sales.sum$coef)
p
sales.sum$coef
p <- length(sales.sum$coef[,1])-1
p
str(sales.sum)
r2 <- sales.sum$adj.r.squared
r2
n <- dim(sales)[1]
n
r2 <- sales.sum$r.squared
r2
p * (1-r2)/(n - (P + 1)) #adjuested r-squared
p <- length(sales.sum$coef[,1])-1
r2 <- sales.sum$r.squared
n <- dim(sales)[1]
p * (1-r2)/(n - (P + 1)) #adjuested r-squared
p * (1-r2)/(n - (p + 1)) #adjuested r-squared
r2 - p * (1-r2)/(n - (p + 1)) #adjuested r-squared
sales.sum
0.907 - 3*(1-.0907^2)/(10-3-1)
0.907 - 0.907 - 3*(1-.0907^2)/(10-3-1)
0.907 - 3*(1-.0907^2)/(10-3-1)
0.907 - 3*(1-.907^2)/(10-3-1)
apply(sales, 2, mean)
apply(sales.mkg, 2, mean)
apply(sales.mktg, 2, mean)
X <- matrix(c(rep(1,10), rep(0,30), rep(1,10), rep(0,30), rep(1,10)), ncol==3)
X <- matrix(c(rep(1,10), rep(0,30), rep(1,10), rep(0,30), rep(1,10)), ncol=3)
X
solve(t(X) %*% X)
t(X) %*% sales.mktg[,-1]
t(X) %*% as.matrix(sales.mktg[,-1])
X %*% as.matrix(sales.mktg[,-1])
dim(X)
dim(sales.mktg[,-1])
dim(t(X))
as.matrix(sales.mktg[,-1]) %*% t(X)
as.vector(sales.mktg[,-1])
unlist(sales.mktg[,-1])
t(X) %*% unlist(sales.mktg[,-1])
solve(t(X)%*% X) %*% t(X) %*% unlist(sales.mktg[,-1])
a <- matrix(c(0,0))
A <- matrix(c(-1,1,0,-1,0,1), nrow = 2, byrow= T)
A
beta.hat1 <-solve(t(X)%*% X) %*% t(X) %*% unlist(sales.mktg[,-1]) # (xt x) inverse xt y
beta.hat1 - solve(t(X)%*%S) t(A) %*% solve(A %*% solve(t(X)%*% X) %*% t(A))%*% (A %*% beta.hat1 - a)
beta.hat1 - solve(t(X)%*% X)%*% t(A) %*% solve(A %*% solve(t(X)%*% X) %*% t(A))%*% (A %*% beta.hat1 - a)
dim(Boston)
dim(boston)
apply(Boston, 2, mean)
round(apply(Boston, 2, mean),2)
round(apply(Boston, 2, median),2)
round(apply(Boston, 2, var),2)
round(apply(Boston, 2, sd),2)
round(cov(Boston),2)
round(cor(Boston),2)
round(cor(Boston),2)
sort(round(cor(Boston),2)[,14])
sort(abs(round(cor(Boston),2)[,14]))
rev(sort(abs(round(cor(Boston),2)[-14,14])))
atanh(cor(Boston)[-14,14])
2*pnorm(-abs(atanh(cor(Boston)[-14,14])))
2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(13-1)))
atanh(cor(Boston)[-14,14])/(13-1)
atanh(cor(Boston)[-14,14])
W <- atanh(cor(Boston)[-14,14])
2*pnorm(-abs(atanh(cor(Boston)[-14,14])/sqrt(13-1)))
atanh(cor(Boston)[-14,14])
atanh(cor(Boston)[-14,14])/sqrt(dim(Boston[-14,])[1] -1)
dim(Boston[-14,])[1] -1
dim(cor(Boston)[-14,])[1] -1
sqrt(dim(cor(Boston)[-14,])[1] -1)
atanh(cor(Boston)[-14,14])/sqrt(dim(cor(Boston)[-14,])[1] -1)
abs(atanh(cor(Boston)[-14,14])/sqrt(dim(cor(Boston)[-14,])[1] -1))
atanh(rx1x4)
1/2*log((1+rx1x4)/(1-rx1x4)) 
abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(cor(Boston)[-14,])[1] -1)))
pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(cor(Boston)[-14,])[1] -1))))
2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(cor(Boston)[-14,])[1] -1))))
rev(sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(cor(Boston)[-14,])[1] -1))))))
sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(cor(Boston)[-14,])[1] -1)))))
n
rev(sort(abs(round(cor(Boston),2)[-14,14])))
sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(cor(Boston)[-14,])[1] -1)))))
round(sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(cor(Boston)[-14,])[1] -1))))),4)
rev(sort(abs(round(cor(Boston),2)[-14,14])))
round(sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(cor(Boston)[-14,])[1] -1))))),4)
round(sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(Boston)[1] -1))))),4)
rev(sort(abs(round(cor(Boston),2)[-14,14])))
round(sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(Boston)[1] -1))))),4)
round(sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(Boston)[1] -1))))),6)
rev(sort(abs(round(cor(Boston),2)[-14,14])))
round(sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(Boston)[1] -1))))),6)
round(sort(2*pnorm(-abs(atanh(cor(Boston)[-14,14])/(1/sqrt(dim(Boston)[1] -3))))),6)
head(BostonT)
head(bostonT)
round(sort(2*pnorm(-abs(atanh(cor(bostonT)[-14,14])/(1/sqrt(dim(bostonT)[1] -3))))),6)
round(apply(bostonT, 2, mean),2)
round(apply(bostonT, 2, median),2)
round(apply(bostonT, 2, var),2)
round(apply(bostonT, 2, sd),2)
round(cov(bostonT),2)
round(cor(bostonT),2)
rev(sort(abs(round(cor(bostonT),2)[-14,14])))
rev(sort(abs(round(cor(Boston),2)[-14,14])))
round(sort(2*pnorm(-abs(atanh(cor(bostonT)[-14,14])/(1/sqrt(dim(bostonT)[1] -3))))),6)
names(bostonT)
summary(lm(valueT ~ ., data=bostonT))
q()
V1
v1
S
eigen(S)$values
eigen(S)$vectors
S %*% v1
t(X[3,])%*% v1
X[3,]%*% v1
X
X <- matrix(c(2,2,1,3,4,3,4,5), ncol=2)
X[3,]%*% v1
X[3,]%*% v1 %*% v1
t(X) %*% v1
X %*% v1
X %*% v1%*%v1
T
apply(T,2,var)
apply(T,2,mean)
T - 3
round(T - 3,1)
ggplot(Boston1.long, aes(x=variable, y=value)) + 
   geom_line(aes(group = id))
library(c(ggplot2,car))
library(ggplot2)
library(car)
ggplot(Boston1.long, aes(x=variable, y=value)) + 
   geom_line(aes(group = id))
library(plyr)
head(Boston1.long)
Boston1.scale <- ddply(Boston1, c("id","variable"), summarise, scale = (value-min(value))/(max(value) - min(value)))
Boston1.scale <- ddply(Boston1.long, c("id","variable"), summarise, scale = (value-min(value))/(max(value) - min(value)))
head(Boston1.scale)
apply(Boston1, 2, function(x) (x - min(x))/(max(x)-min(x)))
Boston1.scale <- ddply(Boston1.long, c("variable"), summarise, scale = (value-min(value))/(max(value) - min(value)))
head(Boston1.scale)
ggplot(Boston1.scale, aes(x=variable, y=scale)) + 
   geom_line(aes(group = id)) + ggtitle("Parallel plot with scaled variables") +
   ylab("")
Boston1.scale$id <- Boston1.long$id
ggplot(Boston1.scale, aes(x=variable, y=scale)) + 
   geom_line(aes(group = id)) + ggtitle("Parallel plot with scaled variables") +
   ylab("")
scatterplotMatrix(Boston1[,-6])# library(car)
q()
uni <- read.table("https://ramct.colostate.edu/webapps/portal/frameset.jsp?tab_tab_group_id=_2_1&url=%2Fwebapps%2Fblackboard%2Fexecute%2Flauncher%3Ftype%3DCourse%26id%3D_28698_1%26url%3D/university_data.txt", header = TRUE)
uni <- read.table("university_data.DAT", header = TRUE)
getwd()
uni <- read.table("university.DAT", header = TRUE)
read.table.url("https://ramct.colostate.edu/webapps/portal/frameset.jsp?tab_tab_group_id=_2_1&url=%2Fwebapps%2Fblackboard%2Fexecute%2Flauncher%3Ftype%3DCourse%26id%3D_28698_1%26url%3D/university.DAT", header=TRUE)
source.url("https://ramct.colostate.edu/webapps/portal/frameset.jsp?tab_tab_group_id=_2_1&url=%2Fwebapps%2Fblackboard%2Fexecute%2Flauncher%3Ftype%3DCourse%26id%3D_28698_1%26url%3D")
??read.table.url
library(RCurl)
temp <- getURL("https://ramct.colostate.edu/webapps/portal/frameset.jsp?tab_tab_group_id=_2_1&url=%2Fwebapps%2Fblackboard%2Fexecute%2Flauncher%3Ftype%3DCourse%26id%3D_28698_1%26url%3D")
temp <- getURL("https://ramct.colostate.edu/webapps/portal/frameset.jsp?tab_tab_group_id=_2_1&url=%2Fwebapps%2Fblackboard%2Fexecute%2Flauncher%3Ftype%3DCourse%26id%3D_28698_1%26url%3D/university.DAT")
head(unit)
head(uni)
uni <- read.table("university.DAT")
head(uni)
 plot(1:2, type = 'n')
 rasterImage(Xras, 1, 1, 2, 2)
library(jpeg)
 rasterImage(Xras, 1, 1, 2, 2)
 Xras <- readJPEG("C:/Users/bgandre/Desktop/Stats Stuff/Multivariate-ClassLee/Tulip.jpg", 
            TRUE)
 plot(1:2, type = 'n')
 rasterImage(Xras, 1, 1, 2, 2)
ls()
dim(X)
X <- readJPEG("C:/Users/bgandre/Desktop/Stats Stuff/Multivariate-ClassLee/Tulip.jpg")
image(X)
image(X[,,1],X[,,2],X[,,3])
image(X[,,1]+X[,,2]+X[,,3])
dim(X)
X.svd <- svd(X)
str(X.svd)
X.svd$d[1:10]
D<-diag(X.svd$d)
D
head(X.svd$d)
head(D)
head(D[,1:10])
U<-X.svd$u
V<-X.svd$v
head(U)
head(V)
XSVD <- U%*% D%*% t(V)
svd
str(X.svd)
e <- eigen(cov(X))
head(X)
data <- read.table("university.DAT")
X <-data.matrix(data)
X.svd <- svd(X)
U<-X.svd$u
head(U[,1:10})
head(U[,1:10])
str(X.svd)
head(data)
dim(data)
data <- read.table("university.DAT")
dim(data)
n <- dim(X)[1]
p <- dim(X)[2]
par(mfrow=c(2,2))
persp(seq(1, n, 1), seq(1, p, 1), X, phi = 50, theta = 75,col = "lightblue",
  xlab = "University", ylab = "Variables",
  main = "X"
)
XSVD <- U%*% D%*% t(V)
persp(seq(1, n, 1), seq(1, p, 1), X, phi = 50, theta = 75,col = "red",
  xlab = "University", ylab = "Variables",
  main = "X"
)
persp(seq(1, n, 1), seq(1, p, 1), XSVD, phi = 50, theta = 75,col = "lightblue",
  xlab = "University", ylab = "Variables",
  main = "UDV'"
)
dim(U)
dim(D)
U<-X.svd$u
D<-diag(X.svd$d)
V<-X.svd$v
XSVD <- U%*% D%*% t(V)
persp(seq(1, n, 1), seq(1, p, 1), XSVD, phi = 50, theta = 75,col = "lightblue",
  xlab = "University", ylab = "Variables",
  main = "UDV'"
)
X1 <- D[1]*U[,1]%*%t(V[,1])
persp(seq(1, n, 1), seq(1, p, 1), X1, phi = 50, theta = 75,col = "lightblue",
  xlab = "University", ylab = "Variables",
  main = "rank 1"
)
X2 <- U[,1:2]%*% D[1:2,1:2]%*%t(V[,1:2])
persp(seq(1, n, 1), seq(1, p, 1), X2, phi = 50, theta = 75,col = "lightblue",
  xlab = "University", ylab = "Variables",
  main = "rank 2 "
)
par(mfrow=c(2,2))
persp(seq(1, n, 1), seq(1, p, 1), X, phi = 50, theta = 75,col = "red",
  xlab = "University", ylab = "Variables",
  main = "X"
)
persp(seq(1, n, 1), seq(1, p, 1), XSVD, phi = 50, theta = 75,col = "lightblue",
  xlab = "University", ylab = "Variables",
  main = "UDV'"
)
persp(seq(1, n, 1), seq(1, p, 1), X1, phi = 50, theta = 75,col = "lightblue",
  xlab = "University", ylab = "Variables",
  main = "rank 1"
)
persp(seq(1, n, 1), seq(1, p, 1), X2, phi = 50, theta = 75,col = "lightblue",
  xlab = "University", ylab = "Variables",
  main = "rank 2 "
)
norm(X-XSVD)
norm(X-X1)
norm(X-X2)
norm(X-XSVD)
sum(X-XSVD)
sum(X-X2)
X <- readJPEG("C:/Users/bgandre/Desktop/Stats Stuff/Multivariate-ClassLee/Tulip.jpg")
grayX <- 0.21*X[,,1]+0.71*X[,,2]+0.07*X[,,3]
X
dim(X)
str(X)
class(X)
grayX <- 0.21*X[,,1]+0.71*X[,,2]+0.07*X[,,3]
image(grayX,col=gray((0:32)/32), main= 'original')
X.svd <- svd(grayX)
U<-X.svd$u
D<-diag(X.svd$d)
V<-X.svd$v
XSVD <- U%*% D%*% t(V)
n <- dim(X)[1]
p <- dim(X)[2]
titlestr <- paste('full rank SVD', ', rank = ', as.character(qr(grayX)$rank))
image(XSVD,col=gray((0:32)/32), main = titlestr)
r<- 10
Xr <- U[,1:r]%*% D[1:r,1:r]%*%t(V[,1:r])
titlestr <-  paste('rank',as.character(r), 'SVD')
image(Xr, col=gray((0:32)/32),main = titlestr)
r<- 20
Xr <- U[,1:r]%*% D[1:r,1:r]%*%t(V[,1:r])
titlestr <-  paste('rank',as.character(r), 'SVD')
image(Xr, col=gray((0:32)/32),main = titlestr)
library(Matrix)
titlestr <- paste('full rank SVD, rank = ', rankMatrix(grayX)) #as.character(qr(grayX)$rank))
image(XSVD,col=gray((0:32)/32), main = titlestr)
dim(X)
class(X)
head(X)
dim(grayX)
(0:32)/32
 plot(1:2, type = 'n')
 rasterImage(Xras, 1, 1, 2, 2)
 rasterImage(Xras, 1, 1, 1, 1)
 rasterImage(Xras, 2, 2, 1, 1)
 rasterImage(Xras, 2, 1, 1, 1)
 rasterImage(Xras, 2, 1, 2, 1)
 rasterImage(Xras, 2, 1, 2, 2)
 rasterImage(Xras, 2, 2, 2, 2)
 rasterImage(Xras, 1, 2, 2, 2)
 rasterImage(Xras, 1, 1, 2, 2)
 rasterImage(Xras, 2, 1, 2, 2)
 rasterImage(Xras, 1, 2, 2, 1)
 rasterImage(Xras, 2, 1, 1, 2)
 rasterImage(Xras, 2, 1, 1, 2, angle= 90)
 rasterImage(Xras, 2, 1, 1, 2, angle= 1800)
 rasterImage(Xras, 2, 1, 1, 2, angle= 180)
 rasterImage(Xras, 2, 1, 1, 2, angle= 0)
Xtrial <- X[,,1] + X[,,2] + X[,,3]
image(Xtrial,col=gray((0:32)/32), main= 'original')
 rasterImage(Xtrial, 2, 1, 1, 2, angle= 1800)
max(grayX)
str(X.svd)
hed(X.svd$d)
head(X.svd$d)
tail(X.svd$d)
X.svd
X.svd$d
X.svd$u
str(X.svd$u)
head(X.svd$u[,1:10])
Xnew <- X.svd$u %*% diag(X.svd$d) %*% t(X.svd$v)
dim(Xnew)
r<- 10
Xr <- U[,1:r]%*% D[1:r,1:r]%*%t(V[,1:r])
titlestr <-  paste('rank',as.character(r), 'SVD')
image(Xr, col=gray((0:32)/32),main = titlestr)
r<- 15
Xr <- U[,1:r]%*% D[1:r,1:r]%*%t(V[,1:r])
titlestr <-  paste('rank',as.character(r), 'SVD')
image(Xr, col=gray((0:32)/32),main = titlestr)
titlestr <-  paste('rank', r, 'SVD')
image(Xr, col=gray((0:32)/32),main = titlestr)
r<- 30
Xr <- U[,1:r]%*% D[1:r,1:r]%*%t(V[,1:r])
titlestr <-  paste('rank', r, 'SVD')
image(Xr, col=gray((0:32)/32),main = titlestr)
m <- cov(X)
m <- cov(grayX)
z <- cor(grayX)
head(m[,1:10])
head(z[,1:10])
q()
